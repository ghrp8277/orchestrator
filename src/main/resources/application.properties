spring.application.name=OrchestratorService

# ? ?? ??
server.port=3000

server.servlet.context-path=/v1

## Multipart properties
# Enable multipart uploads
spring.servlet.multipart.enabled=true

# Max file size.
spring.servlet.multipart.max-file-size=200MB

# Max Request Size
spring.servlet.multipart.max-request-size=215MB

file.upload-dir=./uploaded-images

# kafka
spring.kafka.bootstrap-servers=localhost:9093
spring.kafka.consumer.group-id=my-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# gRPC ????? ??
user.grpc.host=localhost
user.grpc.port=3090
email.grpc.host=localhost
email.grpc.port=3091
auth.grpc.host=localhost
auth.grpc.port=3092
social.grpc.host=localhost
social.grpc.port=3093
stock.grpc.host=localhost
stock.grpc.port=3094

# ?? ?? ?? ??
logging.level.root=INFO

# ?? ???? ?? ?? ??
logging.level.com.example=DEBUG

# ??? ?? ?? ??
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# ??? ?? ?? ??
logging.file.name=logs/myapp.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

jwt.secret=${JWT_SECRET}
jwt.expiration=${JWT_EXPIRATION}
jwt.refreshExpiration=${JWT_REFRESH_EXPIRATION}
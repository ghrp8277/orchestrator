2024-07-30 00:07:05 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 13428]
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=105, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 105: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=105, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:35:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=106, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 106: {consumer-initial-data-group-1-57572b69-1bdd-4fd1-b4b9-25e6ee4bcc2c=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=106, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:35:50 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:37:05 [MessageBroker-5] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 45], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 8], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 13861]
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=107, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 107: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=107, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:37:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:38:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=108, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 108: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-f2c492c0-4e5f-4ef9-bb9d-2fac29ecf44f=Assignment(partitions=[initial-data-request-0])}
2024-07-30 00:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=108, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=37, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:38:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=109, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 109: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=109, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=39, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:39:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=110, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 110: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-e77b60e5-fbeb-4e31-a7c5-2f39135fe6b0=Assignment(partitions=[initial-data-request-0])}
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=110, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=39, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:39:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=111, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 111: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=111, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=112, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 112: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-a9fb585d-46dd-4b66-b6c4-6fc9e517bb1b=Assignment(partitions=[initial-data-request-0])}
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=112, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:40:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=113, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 113: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=113, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:42:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=114, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 114: {consumer-initial-data-group-1-d27a9392-370b-4f0a-b109-687d4b7f1680=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=114, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:42:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=115, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 115: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=115, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:45:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 00:45:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 00:45:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 00:45:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 00:45:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 00:45:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=116, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:45:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 116: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-942bcc2c-21fa-4dff-903b-d57e20102c65=Assignment(partitions=[initial-data-request-0])}
2024-07-30 00:45:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=116, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 00:45:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 00:45:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 00:45:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 00:45:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 01:07:05 [MessageBroker-14] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 96], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 14291]
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=117, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 117: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=117, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 01:24:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=118, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 118: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-74d01c00-2a81-498b-9351-edd775f432dc=Assignment(partitions=[initial-data-request-0])}
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=118, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 01:25:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=119, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 119: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=119, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 01:26:04 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 01:26:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 01:26:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 01:26:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 01:26:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 01:26:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=120, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:26:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 120: {consumer-initial-data-group-1-785f6d87-41bf-4539-9eee-14a80275af77=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 01:26:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=120, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:26:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 01:26:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 01:26:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 01:26:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=121, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 121: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=121, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 01:29:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=122, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 122: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-b37cf16f-feb3-4a48-8be2-e40b5550ec6c=Assignment(partitions=[initial-data-request-0])}
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=122, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 01:29:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 01:37:05 [MessageBroker-10] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 105], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 14724]
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=123, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 123: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=123, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 01:42:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=124, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 124: {consumer-initial-data-group-1-9068da5f-7f87-4352-b830-5767708b4d34=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=124, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 01:42:40 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:07:05 [MessageBroker-25] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 108], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 15157]
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=125, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 125: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=125, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:12:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: cached metadata has changed from (version221: {initial-data-topic=[NO_RACKS], initial-data-request=[NO_RACKS]}) at the beginning of the rebalance to (version222: {initial-data-topic=[NO_RACKS]})
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=126, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 126: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=126, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:12:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:12:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:12:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:12:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:12:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:12:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=127, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:12:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 127: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-f1497838-8bb6-4bdd-b5fd-3f982b656851=Assignment(partitions=[initial-data-request-0])}
2024-07-30 02:12:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=127, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:12:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:12:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:12:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:12:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=128, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 128: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=128, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:13:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:14:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:14:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:14:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:14:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:14:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=129, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:14:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 129: {consumer-initial-data-group-1-20d8733e-47c4-47c3-915f-9823dec02eed=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 02:14:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=129, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:14:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:14:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:14:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:14:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=130, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 130: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=130, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:14:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:14:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:14:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=131, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 131: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-069cc28f-015c-4cd8-9bbf-90c24a33c3e1=Assignment(partitions=[initial-data-request-0])}
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=131, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:14:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=132, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 132: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=132, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:15:58 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=133, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 133: {consumer-initial-data-group-1-53017f97-e984-43de-94c5-e955ccc351d9=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=133, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:16:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=134, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 134: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0])}
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=134, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:22:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=135, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 135: {consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-e473cdf3-ed94-4e85-8f0c-ea1028e12667=Assignment(partitions=[initial-data-request-0])}
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=135, memberId='consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e', protocol='range'}
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 02:37:05 [MessageBroker-19] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 120], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 15590]
2024-07-30 03:07:05 [MessageBroker-15] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 120], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 16], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 16023]
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@67d180e4]]
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Member consumer-initial-data-group-1-464ec503-7204-4085-9423-83ee36c86b7e sending LeaveGroup request to coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-initial-data-group-1 unregistered
2024-07-30 03:25:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: Consumer stopped
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=OrchestratorService-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-30 03:25:17 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for OrchestratorService-producer-1 unregistered
2024-07-30 03:25:22 [main] INFO  c.e.o.OrchestratorApplication - Starting OrchestratorApplication using Java 21.0.3 with PID 246180 (C:\Users\pil48\Project\Orchestrator\build\classes\java\main started by pil48 in C:\Users\pil48\Project\Orchestrator)
2024-07-30 03:25:22 [main] DEBUG c.e.o.OrchestratorApplication - Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-30 03:25:22 [main] INFO  c.e.o.OrchestratorApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-30 03:25:23 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2024-07-30 03:25:23 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-30 03:25:23 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-30 03:25:23 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring embedded WebApplicationContext
2024-07-30 03:25:23 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1172 ms
2024-07-30 03:25:23 [main] DEBUG c.e.o.security.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2024-07-30 03:25:23 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailService
2024-07-30 03:25:24 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2024-07-30 03:25:24 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-07-30 03:25:24 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path '/v1'
2024-07-30 03:25:24 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-30 03:25:24 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-30 03:25:24 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-30 03:25:24 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-30 03:25:24 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722277524558
2024-07-30 03:25:24 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Subscribed to topic(s): error-topic
2024-07-30 03:25:24 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-30 03:25:24 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-30 03:25:24 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-30 03:25:24 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-30 03:25:24 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722277524575
2024-07-30 03:25:24 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Subscribed to topic(s): initial-data-topic
2024-07-30 03:25:24 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2024-07-30 03:25:24 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@17d19538]]
2024-07-30 03:25:24 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2024-07-30 03:25:24 [main] INFO  c.e.o.OrchestratorApplication - Started OrchestratorApplication in 2.865 seconds (process running for 3.383)
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Cluster ID: yO5-5b1hQbGE47BF8xkgkA
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Error while fetching metadata with correlation id 2 : {error-topic=LEADER_NOT_AVAILABLE}
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Cluster ID: yO5-5b1hQbGE47BF8xkgkA
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:25:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:25:24 [RMI TCP Connection(3)-192.168.0.212] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-30 03:25:24 [RMI TCP Connection(3)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-30 03:25:24 [RMI TCP Connection(3)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-30 03:25:26 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=137, memberId='consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794', protocol='range'}
2024-07-30 03:25:26 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=137, memberId='consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf', protocol='range'}
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=137, memberId='consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf', protocol='range'}
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=137, memberId='consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794', protocol='range'}
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Found no committed offset for partition error-topic-0
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Found no committed offset for partition error-topic-0
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Resetting offset for partition error-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}.
2024-07-30 03:25:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=138, memberId='consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794', protocol='range'}
2024-07-30 03:25:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=138, memberId='consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf', protocol='range'}
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 138: {consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf=Assignment(partitions=[error-topic-0])}
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=138, memberId='consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794', protocol='range'}
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=138, memberId='consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf', protocol='range'}
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-30 03:25:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=139, memberId='consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794', protocol='range'}
2024-07-30 03:25:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=139, memberId='consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf', protocol='range'}
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 139: {consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-1d7c2224-efe6-4cf1-affe-d9351ceff7c9=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf=Assignment(partitions=[error-topic-0])}
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=139, memberId='consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf', protocol='range'}
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=139, memberId='consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794', protocol='range'}
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-30 03:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 03:26:24 [MessageBroker-4] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 12, active threads = 0, queued tasks = 0, completed tasks = 12], outboundChannel[pool size = 1, active threads = 0, queued tasks = 0, completed tasks = 1], sockJsScheduler[pool size = 8, active threads = 1, queued tasks = 2, completed tasks = 4]
2024-07-30 03:27:06 [clientInboundChannel-13] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9093]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = OrchestratorService-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-07-30 03:27:06 [clientInboundChannel-13] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-30 03:27:06 [clientInboundChannel-13] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=OrchestratorService-producer-1] Instantiated an idempotent producer.
2024-07-30 03:27:06 [clientInboundChannel-13] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-30 03:27:06 [clientInboundChannel-13] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-30 03:27:06 [clientInboundChannel-13] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722277626685
2024-07-30 03:27:06 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=OrchestratorService-producer-1] Cluster ID: yO5-5b1hQbGE47BF8xkgkA
2024-07-30 03:27:06 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=OrchestratorService-producer-1] ProducerId set to 24 with epoch 0
2024-07-30 03:34:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node -1 disconnected.
2024-07-30 03:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node -1 disconnected.
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=140, memberId='consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf', protocol='range'}
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=140, memberId='consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794', protocol='range'}
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 140: {consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf=Assignment(partitions=[error-topic-0])}
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=140, memberId='consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794', protocol='range'}
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=140, memberId='consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf', protocol='range'}
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-30 03:35:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@17d19538]]
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Member consumer-initial-data-group-1-166a1445-c4eb-4b75-ab8e-a3edf1f323bf sending LeaveGroup request to coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Member consumer-initial-data-group-2-64079f5b-c93d-4a8c-a29f-016ef0fae794 sending LeaveGroup request to coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-initial-data-group-2 unregistered
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: Consumer stopped
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-initial-data-group-1 unregistered
2024-07-30 03:35:43 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: Consumer stopped
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=OrchestratorService-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-30 03:35:43 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for OrchestratorService-producer-1 unregistered
2024-07-30 03:35:46 [main] INFO  c.e.o.OrchestratorApplication - Starting OrchestratorApplication using Java 21.0.3 with PID 244424 (C:\Users\pil48\Project\Orchestrator\build\classes\java\main started by pil48 in C:\Users\pil48\Project\Orchestrator)
2024-07-30 03:35:46 [main] DEBUG c.e.o.OrchestratorApplication - Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-30 03:35:46 [main] INFO  c.e.o.OrchestratorApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-30 03:35:47 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2024-07-30 03:35:47 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-30 03:35:47 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-30 03:35:47 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring embedded WebApplicationContext
2024-07-30 03:35:47 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1172 ms
2024-07-30 03:35:48 [main] DEBUG c.e.o.security.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2024-07-30 03:35:48 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailService
2024-07-30 03:35:48 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2024-07-30 03:35:48 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-07-30 03:35:48 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path '/v1'
2024-07-30 03:35:49 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-30 03:35:49 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-30 03:35:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-30 03:35:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-30 03:35:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722278149115
2024-07-30 03:35:49 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Subscribed to topic(s): initial-data-topic
2024-07-30 03:35:49 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-30 03:35:49 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-30 03:35:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-30 03:35:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-30 03:35:49 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722278149133
2024-07-30 03:35:49 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Subscribed to topic(s): error-topic
2024-07-30 03:35:49 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2024-07-30 03:35:49 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@1df32c09]]
2024-07-30 03:35:49 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2024-07-30 03:35:49 [main] INFO  c.e.o.OrchestratorApplication - Started OrchestratorApplication in 2.915 seconds (process running for 3.467)
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Cluster ID: yO5-5b1hQbGE47BF8xkgkA
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Cluster ID: yO5-5b1hQbGE47BF8xkgkA
2024-07-30 03:35:49 [RMI TCP Connection(3)-192.168.0.212] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-30 03:35:49 [RMI TCP Connection(3)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-30 03:35:49 [RMI TCP Connection(3)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:35:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=142, memberId='consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f', protocol='range'}
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=142, memberId='consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88', protocol='range'}
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=142, memberId='consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88', protocol='range'}
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=142, memberId='consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f', protocol='range'}
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=1, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-30 03:35:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 03:36:48 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2024-07-30 03:37:13 [clientInboundChannel-16] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9093]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = OrchestratorService-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-07-30 03:37:13 [clientInboundChannel-16] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-30 03:37:13 [clientInboundChannel-16] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=OrchestratorService-producer-1] Instantiated an idempotent producer.
2024-07-30 03:37:13 [clientInboundChannel-16] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-30 03:37:13 [clientInboundChannel-16] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-30 03:37:13 [clientInboundChannel-16] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722278233412
2024-07-30 03:37:13 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=OrchestratorService-producer-1] Cluster ID: yO5-5b1hQbGE47BF8xkgkA
2024-07-30 03:37:13 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=OrchestratorService-producer-1] ProducerId set to 26 with epoch 0
2024-07-30 03:44:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node -1 disconnected.
2024-07-30 03:44:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node -1 disconnected.
2024-07-30 03:46:13 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=OrchestratorService-producer-1] Node -1 disconnected.
2024-07-30 03:54:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node -1 disconnected.
2024-07-30 03:54:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node -1 disconnected.
2024-07-30 03:56:13 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=OrchestratorService-producer-1] Node -1 disconnected.
2024-07-30 04:06:48 [MessageBroker-6] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 1 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(1)-CONNECTED(1)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 18], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 2], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 427]
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=143, memberId='consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f', protocol='range'}
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=143, memberId='consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88', protocol='range'}
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 143: {consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f=Assignment(partitions=[error-topic-0])}
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=143, memberId='consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88', protocol='range'}
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=143, memberId='consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f', protocol='range'}
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 04:34:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=144, memberId='consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f', protocol='range'}
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=144, memberId='consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88', protocol='range'}
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Finished assignment for group at generation 144: {consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-fbb05c7e-1dc3-462c-a8d1-45cfe7666326=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f=Assignment(partitions=[error-topic-0])}
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=144, memberId='consumer-initial-data-group-1-ba3eb016-971b-47d3-bbd8-afc9de799e88', protocol='range'}
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=144, memberId='consumer-initial-data-group-2-5c9c536e-48fe-4862-aa3a-8da7aadd554f', protocol='range'}
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=41, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-30 04:34:37 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-30 04:36:49 [MessageBroker-32] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 18, active threads = 0, queued tasks = 0, completed tasks = 78], outboundChannel[pool size = 2, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 858]

2024-07-31 01:25:49 [main] INFO  c.e.o.OrchestratorApplication - Starting OrchestratorApplication using Java 21.0.3 with PID 38012 (C:\Users\pil48\Project\Orchestrator\build\classes\java\main started by pil48 in C:\Users\pil48\Project\Orchestrator)
2024-07-31 01:25:49 [main] DEBUG c.e.o.OrchestratorApplication - Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-31 01:25:49 [main] INFO  c.e.o.OrchestratorApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-31 01:25:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2024-07-31 01:25:50 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-31 01:25:50 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-31 01:25:50 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring embedded WebApplicationContext
2024-07-31 01:25:50 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1551 ms
2024-07-31 01:25:51 [main] DEBUG c.e.o.security.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2024-07-31 01:25:51 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailService
2024-07-31 01:25:51 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2024-07-31 01:25:52 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-07-31 01:25:52 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path '/v1'
2024-07-31 01:25:52 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-31 01:25:52 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 01:25:52 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 01:25:52 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 01:25:52 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722356752557
2024-07-31 01:25:52 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Subscribed to topic(s): initial-data-topic
2024-07-31 01:25:52 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-31 01:25:52 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 01:25:52 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 01:25:52 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 01:25:52 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722356752577
2024-07-31 01:25:52 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Subscribed to topic(s): error-topic
2024-07-31 01:25:52 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2024-07-31 01:25:52 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@180f33b2]]
2024-07-31 01:25:52 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2024-07-31 01:25:52 [main] INFO  c.e.o.OrchestratorApplication - Started OrchestratorApplication in 3.872 seconds (process running for 4.421)
2024-07-31 01:25:52 [RMI TCP Connection(4)-192.168.0.212] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-31 01:25:52 [RMI TCP Connection(4)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-31 01:25:52 [RMI TCP Connection(4)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 2 ms
2024-07-31 01:25:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Error while fetching metadata with correlation id 2 : {initial-data-topic=LEADER_NOT_AVAILABLE}
2024-07-31 01:25:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Error while fetching metadata with correlation id 2 : {error-topic=LEADER_NOT_AVAILABLE}
2024-07-31 01:25:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 01:25:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 01:25:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Error while fetching metadata with correlation id 5 : {error-topic=LEADER_NOT_AVAILABLE}
2024-07-31 01:25:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Error while fetching metadata with correlation id 5 : {initial-data-topic=LEADER_NOT_AVAILABLE}
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=1, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 1: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=1, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Found no committed offset for partition initial-data-topic-0
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Found no committed offset for partition error-topic-0
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Found no committed offset for partition error-topic-0
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Found no committed offset for partition initial-data-topic-0
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Resetting offset for partition error-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}.
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Resetting offset for partition initial-data-topic-0 to position FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}.
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 01:25:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=2, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=2, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 2: {consumer-initial-data-group-2-8bb4aaba-b4ae-4edc-84bf-4f6a15d8838e=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=2, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=2, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 01:26:00 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 01:26:52 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 01:30:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=3, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 3: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=3, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 01:30:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 01:34:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node -1 disconnected.
2024-07-31 01:34:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node -1 disconnected.
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=4, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 01:44:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=4, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 4: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-a71d3de6-ff80-4ab0-93e7-3b4b8f21e1cd=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=4, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=4, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 01:44:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 01:44:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node -1 disconnected.
2024-07-31 01:44:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node -1 disconnected.
2024-07-31 01:56:52 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=5, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 5: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=5, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 02:22:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=6, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=6, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 6: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-bb7cead2-6cf8-4b0f-a603-525d25710246=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=6, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=6, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:22:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 02:26:52 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 3, active threads = 1, queued tasks = 0, completed tasks = 2]
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:30:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=7, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 7: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=7, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 02:30:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=8, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:30:27 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=8, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 8: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-a591df1f-ebc7-4eb9-88b7-57f0f67648b8=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=8, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=8, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:30:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 02:37:09 [clientInboundChannel-16] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9093]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = OrchestratorService-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-07-31 02:37:09 [clientInboundChannel-16] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 02:37:09 [clientInboundChannel-16] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=OrchestratorService-producer-1] Instantiated an idempotent producer.
2024-07-31 02:37:09 [clientInboundChannel-16] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 02:37:09 [clientInboundChannel-16] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 02:37:09 [clientInboundChannel-16] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722361029539
2024-07-31 02:37:09 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=OrchestratorService-producer-1] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 02:37:09 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=OrchestratorService-producer-1] ProducerId set to 8 with epoch 0
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=9, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=9, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 9: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=9, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=9, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:39:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=10, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=10, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 10: {consumer-initial-data-group-2-629dedd5-c6bd-40ee-85a3-417549348f12=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=10, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=10, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:39:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=11, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=11, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 11: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=11, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=11, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 02:44:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=12, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=12, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 12: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-4d0a2494-dcbf-4706-b96a-1f368278dcfc=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=12, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=12, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 02:44:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 02:46:09 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=OrchestratorService-producer-1] Node -1 disconnected.
2024-07-31 02:56:09 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=OrchestratorService-producer-1] Node -1 disconnected.
2024-07-31 02:56:52 [MessageBroker-15] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 39], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 287]
2024-07-31 03:26:52 [MessageBroker-31] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 39], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 5], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 720]
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=13, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=13, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 13: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=13, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=13, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:34:01 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=14, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=14, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 14: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-eb401e6d-81e3-469b-b05b-5c45ac3b13c7=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=14, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=14, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:34:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=15, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=15, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 15: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=15, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=15, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:34:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=16, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=16, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 16: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-97a36a9b-22ae-4b00-9b76-21eb72f8539c=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=16, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=16, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=0, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:34:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=17, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=17, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 17: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=17, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=17, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=205, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:37:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=18, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=18, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 18: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-039114f8-b458-4f59-9015-28a447d26bbc=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=18, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=18, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=208, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:46:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=19, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=19, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 19: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=19, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=19, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4013, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:52:19 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:56:52 [MessageBroker-17] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 39], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4018], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 1133]
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=20, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=20, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 20: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-9584333f-692a-45bc-9e13-3ce6dc0e322b=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=20, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=20, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4013, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:58:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=21, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=21, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 21: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=21, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=21, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4103, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:58:41 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=22, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=22, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 22: {consumer-initial-data-group-2-c6b55ea3-2cde-412a-a216-5debc2374a2d=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=22, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=22, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4103, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 03:59:47 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=23, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=23, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 23: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=23, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=23, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4163, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:00:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=24, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=24, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 24: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-79ab14eb-ea5c-458e-b0d1-ed27bf2af816=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=24, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=24, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4163, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:25:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=25, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=25, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 25: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=25, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=25, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4494, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:25:33 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:26:52 [MessageBroker-28] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 1498]
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=26, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:40:56 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=26, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 26: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-4300414b-a0b7-49d7-b48a-04ba5ab807b8=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=26, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=26, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4495, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:40:57 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=27, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:41:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=27, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 27: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=27, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=27, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4612, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:41:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=28, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:53:28 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=28, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 28: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-1e494703-0499-423b-993d-6df3d770392f=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=28, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=28, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4612, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:53:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=29, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:53:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=29, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 29: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=29, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=29, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4613, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:53:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=30, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=30, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=30, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 30: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-4a496cfa-ef4d-4448-b3b3-99f381f5b98b=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=30, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=31, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=31, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 31: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=31, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=31, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4614, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:55:02 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 04:56:52 [MessageBroker-19] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 1859]
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=32, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=32, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=32, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 32: {consumer-initial-data-group-1-3e236602-0c63-48ae-8f1b-8a9bc5dd7428=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=32, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=33, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=33, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 33: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=33, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=33, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4615, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 04:59:48 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=34, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=34, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=34, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 34: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-3d7ef2fa-5c3b-4ff3-946e-907c44a1b8b0=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=34, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=35, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=35, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 35: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=35, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=35, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4616, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 05:11:35 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=36, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=36, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=36, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 36: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-4e34be43-ed52-40ed-bc34-c17ed3dba830=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=36, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=37, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=37, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 37: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=37, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=37, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4616, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 05:13:05 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 05:26:52 [MessageBroker-16] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 2220]
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=38, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:33:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=38, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 38: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-83becc3e-57c5-49fd-8aa9-89d6cfca4f6e=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=38, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=38, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4617, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:33:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=39, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=39, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 39: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=39, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=39, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4695, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 05:56:03 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=40, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=40, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 40: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-8fea0c6a-a72f-4d1f-a8bf-7c2337df6de3=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=40, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=40, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4695, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 05:56:15 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 05:56:52 [MessageBroker-28] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 2581]
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=41, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=41, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 41: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=41, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=41, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4734, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 06:02:34 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=42, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=42, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 42: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-1-cb693d4e-988c-4c8e-8a55-f807ee030bb3=Assignment(partitions=[initial-data-request-0])}
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=42, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=42, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4734, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 06:02:46 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=43, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=43, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 43: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=43, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=43, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4773, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 06:10:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=44, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=44, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 44: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-bc4ce8f0-5112-4d8f-bb54-5416feaf8254=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=44, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=44, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4773, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 06:10:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 06:26:52 [MessageBroker-20] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 2942]
2024-07-31 06:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 06:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 06:30:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=45, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=45, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 45: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=45, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=45, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 06:30:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=46, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=46, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=46, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 46: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-13347dff-3aad-49af-802b-be73539ced88=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=46, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=47, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=47, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 47: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=47, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=47, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 06:30:38 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=48, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=48, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=48, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 48: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-41aaea8d-f073-4348-8af4-3eb927ae9e7d=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=48, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=49, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=49, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 49: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=49, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=49, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 06:33:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 06:40:21 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Disconnecting from node 1001 due to request timeout.
2024-07-31 06:40:21 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Disconnecting from node 1001 due to request timeout.
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Cancelled in-flight FETCH request with correlation id 52946 due to node 1001 being disconnected (elapsed time since creation: 68516ms, elapsed time since send: 68516ms, request timeout: 30000ms)
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Cancelled in-flight FETCH request with correlation id 43989 due to node 1001 being disconnected (elapsed time since creation: 68516ms, elapsed time since send: 68516ms, request timeout: 30000ms)
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Error sending fetch request (sessionId=1911508704, epoch=37414) to node 1001:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Requesting disconnect from last known coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Client requested disconnect from node 2147482646
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.a.k.clients.FetchSessionHandler - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Error sending fetch request (sessionId=1389501460, epoch=41523) to node 1001:
org.apache.kafka.common.errors.DisconnectException: null
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) is unavailable or invalid due to cause: session timed out without receiving a heartbeat response. isDisconnected: false. Rediscovery will be attempted.
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Requesting disconnect from last known coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Client requested disconnect from node 2147482646
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:22 [kafka-coordinator-heartbeat-thread | initial-data-group] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:22 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:23 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:23 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:23 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:24 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:24 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node 1001 disconnected.
2024-07-31 06:40:25 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:25 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] WARN  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Connection to node 1001 (/192.168.0.212:9093) could not be established. Node may not be available.
2024-07-31 06:40:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 06:40:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 06:56:41 [MessageBroker-31] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 3303]
2024-07-31 07:26:41 [MessageBroker-6] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 3664]
2024-07-31 07:56:41 [MessageBroker-26] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 4025]
2024-07-31 08:26:41 [MessageBroker-25] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 4386]
2024-07-31 08:39:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:39:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 08:39:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 08:39:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=50, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=50, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=50, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 50: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-25b03d7b-955d-416c-bac7-d5238eaba450=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=50, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=51, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=51, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 51: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=51, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=51, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:39:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=52, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=52, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=52, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 52: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-d6d23eb1-062c-4deb-b5ce-b22dad3c9bd8=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=52, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=53, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=53, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 53: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=53, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=53, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 08:43:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=54, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=54, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 54: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-0d52d1d7-b3fb-4abb-a501-2581a7131b23=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=54, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=54, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 08:43:52 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=55, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=55, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 55: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=55, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=55, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 08:43:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=56, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=56, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 56: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-75587a0a-bd9e-477b-abe1-ed874e7bca39=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=56, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=56, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 08:46:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=57, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=57, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 57: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=57, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=57, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 08:46:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=58, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=58, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=58, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 58: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-a821a8b9-9471-427d-8482-76268d421132=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=58, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=59, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=59, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 59: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=59, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=59, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:47:20 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=60, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=60, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 60: {consumer-initial-data-group-1-cf615140-6416-4c3e-b7e5-f2ad8d0bd732=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=60, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=60, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4812, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 08:49:17 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 08:56:41 [MessageBroker-13] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 4747]
2024-07-31 09:26:41 [MessageBroker-30] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 5108]
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=61, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:50:53 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=61, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 61: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=61, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=61, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:50:54 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=62, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:51:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=62, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 62: {consumer-initial-data-group-1-fbcba695-726b-4de4-99fb-b126f0d2b4db=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=62, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=62, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:51:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=63, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:51:11 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=63, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 63: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=63, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=63, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:51:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=64, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=64, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=64, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 64: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-dda1df6f-7af1-4475-a309-7e23e571801d=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=64, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=65, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=65, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 65: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=65, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=65, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:53:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=66, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=66, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 66: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-ee3fd3aa-9aac-489d-9ba3-03146c2c1212=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=66, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=66, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:55:39 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=67, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=67, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 67: {consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549=Assignment(partitions=[error-topic-0])}
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=67, memberId='consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573', protocol='range'}
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=67, memberId='consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549', protocol='range'}
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:55:42 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:56:41 [MessageBroker-25] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 2 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(2)-CONNECTED(2)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 42], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 4109], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 5469]
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@180f33b2]]
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Member consumer-initial-data-group-2-159ad9e5-cf8a-43ff-9012-ab7825721549 sending LeaveGroup request to coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Member consumer-initial-data-group-1-ec22b925-5388-4d5f-a175-fddb9893d573 sending LeaveGroup request to coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-1, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-initial-data-group-2 unregistered
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-initial-data-group-1 unregistered
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: Consumer stopped
2024-07-31 09:56:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: Consumer stopped
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=OrchestratorService-producer-1] Closing the Kafka producer with timeoutMillis = 30000 ms.
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-31 09:56:49 [SpringApplicationShutdownHook] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.producer for OrchestratorService-producer-1 unregistered
2024-07-31 09:56:52 [main] INFO  c.e.o.OrchestratorApplication - Starting OrchestratorApplication using Java 21.0.3 with PID 60488 (C:\Users\pil48\Project\Orchestrator\build\classes\java\main started by pil48 in C:\Users\pil48\Project\Orchestrator)
2024-07-31 09:56:52 [main] DEBUG c.e.o.OrchestratorApplication - Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-31 09:56:52 [main] INFO  c.e.o.OrchestratorApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-31 09:56:53 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2024-07-31 09:56:53 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-31 09:56:53 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-31 09:56:53 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring embedded WebApplicationContext
2024-07-31 09:56:53 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1172 ms
2024-07-31 09:56:54 [main] DEBUG c.e.o.security.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2024-07-31 09:56:54 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailService
2024-07-31 09:56:54 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2024-07-31 09:56:54 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-07-31 09:56:54 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path '/v1'
2024-07-31 09:56:54 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-daily-data-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = daily-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-31 09:56:54 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722387414917
2024-07-31 09:56:54 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Subscribed to topic(s): daily-data-topic
2024-07-31 09:56:54 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-31 09:56:54 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722387414933
2024-07-31 09:56:54 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Subscribed to topic(s): initial-data-topic
2024-07-31 09:56:54 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-31 09:56:54 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 09:56:54 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722387414940
2024-07-31 09:56:54 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Subscribed to topic(s): error-topic
2024-07-31 09:56:54 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2024-07-31 09:56:54 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2de7fe0e]]
2024-07-31 09:56:54 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2024-07-31 09:56:54 [main] INFO  c.e.o.OrchestratorApplication - Started OrchestratorApplication in 2.833 seconds (process running for 3.306)
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: need to re-join with the given member-id: consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=69, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=69, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=67, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 67: {consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 69: {consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=69, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=67, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=69, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Found no committed offset for partition daily-data-topic-0
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Found no committed offset for partition daily-data-topic-0
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.SubscriptionState - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Resetting offset for partition daily-data-topic-0 to position FetchPosition{offset=51275, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}.
2024-07-31 09:56:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 09:56:55 [RMI TCP Connection(3)-192.168.0.212] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-31 09:56:55 [RMI TCP Connection(3)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-31 09:56:55 [RMI TCP Connection(3)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=70, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=68, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=70, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=70, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 70: {consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb=Assignment(partitions=[initial-data-topic-0]), consumer-initial-data-group-1-23ed13d2-6311-427a-998c-94eaa3141734=Assignment(partitions=[initial-data-request-0])}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=70, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=71, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=71, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 71: {consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=71, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=71, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 68: {consumer-daily-data-group-2-648e3f4f-da33-4647-bbc8-6a322cf08db6=Assignment(partitions=[daily-data-request-0]), consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=68, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=69, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 69: {consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=69, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51276, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:57:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=72, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=72, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=72, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 72: {consumer-initial-data-group-1-ee865074-ec6b-4a6b-b343-2fe36063132e=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=72, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=73, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=73, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Finished assignment for group at generation 73: {consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=73, memberId='consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb', protocol='range'}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=73, memberId='consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59', protocol='range'}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 09:57:49 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=70, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 70: {consumer-daily-data-group-2-1c0e0007-5c72-4730-b484-6ee085d59f4c=Assignment(partitions=[daily-data-request-0]), consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=70, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=71, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 71: {consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=71, memberId='consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c', protocol='range'}
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51277, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:57:50 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 09:57:54 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2024-07-31 09:59:45 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopping...
2024-07-31 09:59:45 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=false, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@2de7fe0e]]
2024-07-31 09:59:45 [SpringApplicationShutdownHook] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Stopped.
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Member consumer-daily-data-group-1-6381b4be-a73d-4004-8547-78b28cf03e0c sending LeaveGroup request to coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Member consumer-initial-data-group-3-31d7282a-2908-4794-8c54-4ed3c52c1d59 sending LeaveGroup request to coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Member consumer-initial-data-group-2-1e9bd895-5e18-455d-8fc6-cdec3863aadb sending LeaveGroup request to coordinator 192.168.0.212:9093 (id: 2147482646 rack: null) due to the consumer unsubscribed from all topics
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Unsubscribed all topics or patterns and assigned partitions
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Resetting generation and member id due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: consumer pro-actively leaving the group
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-initial-data-group-3 unregistered
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-initial-data-group-2 unregistered
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: Consumer stopped
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: Consumer stopped
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics scheduler closed
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.metrics.JmxReporter
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Closing reporter org.apache.kafka.common.telemetry.internals.ClientTelemetryReporter
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.metrics.Metrics - Metrics reporters closed
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.kafka.common.utils.AppInfoParser - App info kafka.consumer for consumer-daily-data-group-1 unregistered
2024-07-31 09:59:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: Consumer stopped
2024-07-31 09:59:48 [main] INFO  c.e.o.OrchestratorApplication - Starting OrchestratorApplication using Java 21.0.3 with PID 49816 (C:\Users\pil48\Project\Orchestrator\build\classes\java\main started by pil48 in C:\Users\pil48\Project\Orchestrator)
2024-07-31 09:59:48 [main] DEBUG c.e.o.OrchestratorApplication - Running with Spring Boot v3.3.1, Spring v6.1.10
2024-07-31 09:59:48 [main] INFO  c.e.o.OrchestratorApplication - No active profile set, falling back to 1 default profile: "default"
2024-07-31 09:59:49 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat initialized with port 3000 (http)
2024-07-31 09:59:49 [main] INFO  o.a.catalina.core.StandardService - Starting service [Tomcat]
2024-07-31 09:59:49 [main] INFO  o.a.catalina.core.StandardEngine - Starting Servlet engine: [Apache Tomcat/10.1.25]
2024-07-31 09:59:49 [main] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring embedded WebApplicationContext
2024-07-31 09:59:49 [main] INFO  o.s.b.w.s.c.ServletWebServerApplicationContext - Root WebApplicationContext: initialization completed in 1132 ms
2024-07-31 09:59:49 [main] DEBUG c.e.o.security.JwtRequestFilter - Filter 'jwtRequestFilter' configured for use
2024-07-31 09:59:50 [main] INFO  o.s.s.c.a.a.c.InitializeUserDetailsBeanManagerConfigurer$InitializeUserDetailsManagerConfigurer - Global AuthenticationManager configured with UserDetailsService bean with name customUserDetailService
2024-07-31 09:59:50 [main] INFO  o.s.b.a.e.web.EndpointLinksResolver - Exposing 1 endpoint beneath base path '/actuator'
2024-07-31 09:59:50 [main] WARN  o.s.b.a.t.ThymeleafAutoConfiguration$DefaultTemplateResolverConfiguration - Cannot find template location: classpath:/templates/ (please add some templates, check your Thymeleaf configuration, or set spring.thymeleaf.check-template-location=false)
2024-07-31 09:59:50 [main] INFO  o.s.b.w.e.tomcat.TomcatWebServer - Tomcat started on port 3000 (http) with context path '/v1'
2024-07-31 09:59:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-daily-data-group-1
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = daily-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-31 09:59:50 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722387590734
2024-07-31 09:59:50 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Subscribed to topic(s): daily-data-topic
2024-07-31 09:59:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-2
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-31 09:59:50 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722387590752
2024-07-31 09:59:50 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Subscribed to topic(s): initial-data-topic
2024-07-31 09:59:50 [main] INFO  o.a.k.c.consumer.ConsumerConfig - ConsumerConfig values: 
	allow.auto.create.topics = true
	auto.commit.interval.ms = 5000
	auto.include.jmx.reporter = true
	auto.offset.reset = latest
	bootstrap.servers = [localhost:9093]
	check.crcs = true
	client.dns.lookup = use_all_dns_ips
	client.id = consumer-initial-data-group-3
	client.rack = 
	connections.max.idle.ms = 540000
	default.api.timeout.ms = 60000
	enable.auto.commit = false
	enable.metrics.push = true
	exclude.internal.topics = true
	fetch.max.bytes = 52428800
	fetch.max.wait.ms = 500
	fetch.min.bytes = 1
	group.id = initial-data-group
	group.instance.id = null
	group.protocol = classic
	group.remote.assignor = null
	heartbeat.interval.ms = 3000
	interceptor.classes = []
	internal.leave.group.on.close = true
	internal.throw.on.fetch.stable.offset.unsupported = false
	isolation.level = read_uncommitted
	key.deserializer = class org.apache.kafka.common.serialization.StringDeserializer
	max.partition.fetch.bytes = 1048576
	max.poll.interval.ms = 300000
	max.poll.records = 500
	metadata.max.age.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partition.assignment.strategy = [class org.apache.kafka.clients.consumer.RangeAssignor, class org.apache.kafka.clients.consumer.CooperativeStickyAssignor]
	receive.buffer.bytes = 65536
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	session.timeout.ms = 45000
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	value.deserializer = class org.apache.kafka.common.serialization.StringDeserializer

2024-07-31 09:59:50 [main] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 09:59:50 [main] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722387590758
2024-07-31 09:59:50 [main] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Subscribed to topic(s): error-topic
2024-07-31 09:59:50 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Starting...
2024-07-31 09:59:50 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - BrokerAvailabilityEvent[available=true, SimpleBrokerMessageHandler [org.springframework.messaging.simp.broker.DefaultSubscriptionRegistry@118e2487]]
2024-07-31 09:59:50 [main] INFO  o.s.m.s.b.SimpleBrokerMessageHandler - Started.
2024-07-31 09:59:50 [main] INFO  c.e.o.OrchestratorApplication - Started OrchestratorApplication in 2.77 seconds (process running for 3.252)
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  org.apache.kafka.clients.Metadata - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Discovered group coordinator 192.168.0.212:9093 (id: 2147482646 rack: null)
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: need to re-join with the given member-id: consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: need to re-join with the given member-id: consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=75, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=75, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=73, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 73: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 75: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=73, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=75, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=75, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51277, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 09:59:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 09:59:51 [RMI TCP Connection(2)-192.168.0.212] INFO  o.a.c.c.C.[Tomcat].[localhost].[/v1] - Initializing Spring DispatcherServlet 'dispatcherServlet'
2024-07-31 09:59:51 [RMI TCP Connection(2)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Initializing Servlet 'dispatcherServlet'
2024-07-31 09:59:51 [RMI TCP Connection(2)-192.168.0.212] INFO  o.s.web.servlet.DispatcherServlet - Completed initialization in 1 ms
2024-07-31 10:00:50 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 1, active threads = 1, queued tasks = 0, completed tasks = 0]
2024-07-31 10:08:51 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Node -1 disconnected.
2024-07-31 10:08:51 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Node -1 disconnected.
2024-07-31 10:08:51 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node -1 disconnected.
2024-07-31 10:18:55 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Node -1 disconnected.
2024-07-31 10:18:55 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Node -1 disconnected.
2024-07-31 10:18:55 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.apache.kafka.clients.NetworkClient - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Node -1 disconnected.
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=76, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=76, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=76, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 76: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-1-faf95988-5e52-4ca6-8b9a-d811a28d9668=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=76, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=74, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=77, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=77, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 77: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=77, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=77, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 10:20:44 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 74: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0]), consumer-daily-data-group-2-d378a488-c2c8-445c-939a-64888c8d2a4f=Assignment(partitions=[daily-data-request-0])}
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=74, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=75, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 75: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=75, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 10:20:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: cached metadata has changed from (version8: {daily-data-request=[NO_RACKS], daily-data-topic=[NO_RACKS]}) at the beginning of the rebalance to (version9: {daily-data-topic=[NO_RACKS]})
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=76, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 76: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=76, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 10:25:45 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 10:30:54 [MessageBroker-1] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 0 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(0)-CONNECTED(0)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 0], sockJsScheduler[pool size = 2, active threads = 1, queued tasks = 0, completed tasks = 1]
2024-07-31 10:41:40 [clientInboundChannel-58] INFO  o.a.k.c.producer.ProducerConfig - ProducerConfig values: 
	acks = -1
	auto.include.jmx.reporter = true
	batch.size = 16384
	bootstrap.servers = [localhost:9093]
	buffer.memory = 33554432
	client.dns.lookup = use_all_dns_ips
	client.id = OrchestratorService-producer-1
	compression.type = none
	connections.max.idle.ms = 540000
	delivery.timeout.ms = 120000
	enable.idempotence = true
	enable.metrics.push = true
	interceptor.classes = []
	key.serializer = class org.apache.kafka.common.serialization.StringSerializer
	linger.ms = 0
	max.block.ms = 60000
	max.in.flight.requests.per.connection = 5
	max.request.size = 1048576
	metadata.max.age.ms = 300000
	metadata.max.idle.ms = 300000
	metric.reporters = []
	metrics.num.samples = 2
	metrics.recording.level = INFO
	metrics.sample.window.ms = 30000
	partitioner.adaptive.partitioning.enable = true
	partitioner.availability.timeout.ms = 0
	partitioner.class = null
	partitioner.ignore.keys = false
	receive.buffer.bytes = 32768
	reconnect.backoff.max.ms = 1000
	reconnect.backoff.ms = 50
	request.timeout.ms = 30000
	retries = 2147483647
	retry.backoff.max.ms = 1000
	retry.backoff.ms = 100
	sasl.client.callback.handler.class = null
	sasl.jaas.config = null
	sasl.kerberos.kinit.cmd = /usr/bin/kinit
	sasl.kerberos.min.time.before.relogin = 60000
	sasl.kerberos.service.name = null
	sasl.kerberos.ticket.renew.jitter = 0.05
	sasl.kerberos.ticket.renew.window.factor = 0.8
	sasl.login.callback.handler.class = null
	sasl.login.class = null
	sasl.login.connect.timeout.ms = null
	sasl.login.read.timeout.ms = null
	sasl.login.refresh.buffer.seconds = 300
	sasl.login.refresh.min.period.seconds = 60
	sasl.login.refresh.window.factor = 0.8
	sasl.login.refresh.window.jitter = 0.05
	sasl.login.retry.backoff.max.ms = 10000
	sasl.login.retry.backoff.ms = 100
	sasl.mechanism = GSSAPI
	sasl.oauthbearer.clock.skew.seconds = 30
	sasl.oauthbearer.expected.audience = null
	sasl.oauthbearer.expected.issuer = null
	sasl.oauthbearer.jwks.endpoint.refresh.ms = 3600000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.max.ms = 10000
	sasl.oauthbearer.jwks.endpoint.retry.backoff.ms = 100
	sasl.oauthbearer.jwks.endpoint.url = null
	sasl.oauthbearer.scope.claim.name = scope
	sasl.oauthbearer.sub.claim.name = sub
	sasl.oauthbearer.token.endpoint.url = null
	security.protocol = PLAINTEXT
	security.providers = null
	send.buffer.bytes = 131072
	socket.connection.setup.timeout.max.ms = 30000
	socket.connection.setup.timeout.ms = 10000
	ssl.cipher.suites = null
	ssl.enabled.protocols = [TLSv1.2, TLSv1.3]
	ssl.endpoint.identification.algorithm = https
	ssl.engine.factory.class = null
	ssl.key.password = null
	ssl.keymanager.algorithm = SunX509
	ssl.keystore.certificate.chain = null
	ssl.keystore.key = null
	ssl.keystore.location = null
	ssl.keystore.password = null
	ssl.keystore.type = JKS
	ssl.protocol = TLSv1.3
	ssl.provider = null
	ssl.secure.random.implementation = null
	ssl.trustmanager.algorithm = PKIX
	ssl.truststore.certificates = null
	ssl.truststore.location = null
	ssl.truststore.password = null
	ssl.truststore.type = JKS
	transaction.timeout.ms = 60000
	transactional.id = null
	value.serializer = class org.apache.kafka.common.serialization.StringSerializer

2024-07-31 10:41:40 [clientInboundChannel-58] INFO  o.a.k.c.t.i.KafkaMetricsCollector - initializing Kafka metrics collector
2024-07-31 10:41:40 [clientInboundChannel-58] INFO  o.a.k.clients.producer.KafkaProducer - [Producer clientId=OrchestratorService-producer-1] Instantiated an idempotent producer.
2024-07-31 10:41:40 [clientInboundChannel-58] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka version: 3.7.0
2024-07-31 10:41:40 [clientInboundChannel-58] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka commitId: 2ae524ed625438c5
2024-07-31 10:41:40 [clientInboundChannel-58] INFO  o.a.kafka.common.utils.AppInfoParser - Kafka startTimeMs: 1722390100481
2024-07-31 10:41:40 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  org.apache.kafka.clients.Metadata - [Producer clientId=OrchestratorService-producer-1] Cluster ID: bWWSJmyFRSukjIZH5E_4Ow
2024-07-31 10:41:40 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.a.k.c.p.i.TransactionManager - [Producer clientId=OrchestratorService-producer-1] ProducerId set to 48 with epoch 0
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=77, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 77: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0]), consumer-daily-data-group-2-dcb8ce7c-38e7-4aab-b956-64bd917b0cb4=Assignment(partitions=[daily-data-request-0])}
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=77, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 10:42:35 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=78, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=78, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 78: {consumer-initial-data-group-1-fcceecd0-51e1-44ac-bbf8-5507ab683c9f=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=78, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=78, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4851, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 10:42:36 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 10:50:40 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=OrchestratorService-producer-1] Node -1 disconnected.
2024-07-31 11:00:40 [kafka-producer-network-thread | OrchestratorService-producer-1] INFO  o.apache.kafka.clients.NetworkClient - [Producer clientId=OrchestratorService-producer-1] Node -1 disconnected.
2024-07-31 11:00:54 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 63], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 329]
2024-07-31 11:30:54 [MessageBroker-2] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[1 current WS(1)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 63], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 9], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 2, completed tasks = 762]
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=79, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=79, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 79: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=79, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=79, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4853, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:39:18 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=78, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 78: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=78, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:39:20 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=79, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 79: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0]), consumer-daily-data-group-1-d60af2cf-c409-443b-9b5b-0068fde056f7=Assignment(partitions=[daily-data-request-0])}
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=79, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:40:05 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=80, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=80, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 80: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-454dfe97-3e50-4767-9af9-e010cbc9bd8c=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=80, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=80, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4853, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 11:40:06 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 11:40:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=80, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 80: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=80, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:40:08 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=81, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=81, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 81: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=81, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=81, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4853, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=2, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 2 for partition initial-data-topic-0
2024-07-31 11:40:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:40:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for initial-data-topic-0@2
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=81, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 81: {consumer-daily-data-group-1-659428bc-5164-47d8-8b06-6560b94fb856=Assignment(partitions=[daily-data-request-0]), consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=81, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=82, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 82: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=82, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=82, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=82, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=82, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:43:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 82: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-6be64aa0-74af-4b19-b8c3-2a9564b89bc8=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=82, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=83, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=83, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 83: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=83, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=83, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4853, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 11:43:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=83, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 83: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0]), consumer-daily-data-group-2-9dc6541e-3865-4a14-895b-069f4f0997a2=Assignment(partitions=[daily-data-request-0])}
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=83, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=84, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 84: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=84, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:45:30 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=84, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=84, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=84, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 84: {consumer-initial-data-group-1-e7ad7b63-c8ab-4735-90e3-a66b4d8a07e8=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=84, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=85, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=85, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 85: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=85, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=85, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4853, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 11:45:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=85, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 85: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0]), consumer-daily-data-group-2-b1af5038-c4d7-402a-b1cb-150f9ccdbb2d=Assignment(partitions=[daily-data-request-0])}
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=85, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=86, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 86: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=86, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:13 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=86, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=86, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=86, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 86: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-1-2a7411df-0817-4c23-8b70-8226df279811=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=86, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=87, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=87, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 87: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=87, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=87, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=3, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4853, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:14 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:15 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:16 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 3 for partition initial-data-topic-0
2024-07-31 11:47:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:47:17 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for initial-data-topic-0@3
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=87, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 87: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0]), consumer-daily-data-group-1-7561bdc5-641f-4be2-b2a7-cc0b33528b7b=Assignment(partitions=[daily-data-request-0])}
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=87, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:07 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=88, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=88, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=88, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 88: {consumer-initial-data-group-2-a90be4c2-4260-476d-8151-4faea7f1b2f1=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=88, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=89, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=89, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 89: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=89, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=89, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4853, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=4, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:08 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:09 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=88, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 88: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=88, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:10 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 4 for partition initial-data-topic-0
2024-07-31 11:48:11 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:48:12 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for initial-data-topic-0@4
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (StringReader); line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=89, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 89: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0]), consumer-daily-data-group-2-d6abe2d1-096b-4367-b782-1769a7102292=Assignment(partitions=[daily-data-request-0])}
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=89, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:29 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Revoke previously assigned partitions initial-data-topic-0
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [initial-data-topic-0]
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Revoke previously assigned partitions error-topic-0
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions revoked: [error-topic-0]
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=90, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=90, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=90, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 90: {consumer-initial-data-group-1-934781c2-7c5d-4de8-b36b-18a01ea59616=Assignment(partitions=[initial-data-request-0]), consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] SyncGroup failed: The group began another rebalance. Need to re-join the group. Sent generation was Generation{generationId=90, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Request joining group due to: rebalance failed due to 'The group is rebalancing, so a rejoin is needed.' (RebalanceInProgressException)
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] (Re-)joining group
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=91, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully joined group with generation Generation{generationId=91, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Finished assignment for group at generation 91: {consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454=Assignment(partitions=[error-topic-0]), consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae=Assignment(partitions=[initial-data-topic-0])}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=91, memberId='consumer-initial-data-group-3-ac4a82ef-cf13-41aa-b4f5-ee644ed75454', protocol='range'}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Successfully synced group in generation Generation{generationId=91, memberId='consumer-initial-data-group-2-5df0770e-29f1-4e38-aa1f-29ef19d7d1ae', protocol='range'}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[error-topic-0])
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Notifying assignor about the new Assignment(partitions=[initial-data-topic-0])
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-3, groupId=initial-data-group] Adding newly assigned partitions: error-topic-0
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Adding newly assigned partitions: initial-data-topic-0
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition initial-data-topic-0 to the committed offset FetchPosition{offset=5, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition error-topic-0 to the committed offset FetchPosition{offset=4853, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [initial-data-topic-0]
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#1-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - initial-data-group: partitions assigned: [error-topic-0]
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:30 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:31 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: group is already rebalancing
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=90, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 90: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=90, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:32 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] INFO  o.a.k.c.c.i.LegacyKafkaConsumer - [Consumer clientId=consumer-initial-data-group-2, groupId=initial-data-group] Seeking to offset 5 for partition initial-data-topic-0
2024-07-31 11:51:33 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.l.KafkaMessageListenerContainer - Error handler threw an exception
org.springframework.kafka.KafkaException: Seek to current after exception
	at org.springframework.kafka.listener.SeekUtils.seekOrRecover(SeekUtils.java:227)
	at org.springframework.kafka.listener.DefaultErrorHandler.handleRemaining(DefaultErrorHandler.java:168)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeErrorHandler(KafkaMessageListenerContainer.java:2836)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2713)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
Caused by: org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	... 10 common frames omitted
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:51:34 [org.springframework.kafka.KafkaListenerEndpointContainer#0-0-C-1] ERROR o.s.k.listener.DefaultErrorHandler - Backoff FixedBackOff{interval=0, currentAttempts=10, maxAttempts=9} exhausted for initial-data-topic-0@5
org.springframework.kafka.listener.ListenerExecutionFailedException: Listener method 'public void com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(java.lang.String)' threw exception
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.decorateException(KafkaMessageListenerContainer.java:2869)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2814)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeOnMessage(KafkaMessageListenerContainer.java:2778)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.lambda$doInvokeRecordListener$53(KafkaMessageListenerContainer.java:2701)
	at io.micrometer.observation.Observation.observe(Observation.java:565)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeRecordListener(KafkaMessageListenerContainer.java:2699)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeWithRecords(KafkaMessageListenerContainer.java:2541)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeRecordListener(KafkaMessageListenerContainer.java:2430)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeListener(KafkaMessageListenerContainer.java:2085)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.invokeIfHaveRecords(KafkaMessageListenerContainer.java:1461)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.pollAndInvoke(KafkaMessageListenerContainer.java:1426)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.run(KafkaMessageListenerContainer.java:1296)
	at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804)
	at java.base/java.lang.Thread.run(Thread.java:1583)
	Suppressed: org.springframework.kafka.listener.ListenerExecutionFailedException: Restored Stack Trace
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:435)
		at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
		at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
		at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
Caused by: java.lang.RuntimeException: Invalid JSON format
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:24)
	at com.example.orchestrator.service.KafkaConsumerService.consumeInitialDataRequest(KafkaConsumerService.java:24)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:169)
	at org.springframework.kafka.listener.adapter.KotlinAwareInvocableHandlerMethod.doInvoke(KotlinAwareInvocableHandlerMethod.java:45)
	at org.springframework.messaging.handler.invocation.InvocableHandlerMethod.invoke(InvocableHandlerMethod.java:119)
	at org.springframework.kafka.listener.adapter.HandlerAdapter.invoke(HandlerAdapter.java:70)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invokeHandler(MessagingMessageListenerAdapter.java:420)
	at org.springframework.kafka.listener.adapter.MessagingMessageListenerAdapter.invoke(MessagingMessageListenerAdapter.java:384)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:85)
	at org.springframework.kafka.listener.adapter.RecordMessagingMessageListenerAdapter.onMessage(RecordMessagingMessageListenerAdapter.java:50)
	at org.springframework.kafka.listener.KafkaMessageListenerContainer$ListenerConsumer.doInvokeOnMessage(KafkaMessageListenerContainer.java:2800)
	... 12 common frames omitted
Caused by: com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException: Unrecognized field "marketName" (class com.example.orchestrator.dto.InitialStockDto), not marked as ignorable (5 known properties: "stockData", "movingAverages", "macd", "rsi", "bollingerBands"])
 at [Source: (String)"{"marketName":"KOSPI","code":"005930","stockData":[{"date":"20240701","openPrice":81500,"highPrice":82100,"lowPrice":81300,"closePrice":81800,"volume":11317202},{"date":"20240702","openPrice":82500,"highPrice":82600,"lowPrice":81500,"closePrice":81800,"volume":14471904},{"date":"20240703","openPrice":82300,"highPrice":82300,"lowPrice":81000,"closePrice":81800,"volume":11440328},{"date":"20240704","openPrice":82900,"highPrice":84700,"lowPrice":82400,"closePrice":84600,"volume":43857229},{"date":""[truncated 3232 chars]; line: 1, column: 16] (through reference chain: com.example.orchestrator.dto.InitialStockDto["marketName"])
	at com.fasterxml.jackson.databind.exc.UnrecognizedPropertyException.from(UnrecognizedPropertyException.java:61)
	at com.fasterxml.jackson.databind.DeserializationContext.handleUnknownProperty(DeserializationContext.java:1138)
	at com.fasterxml.jackson.databind.deser.std.StdDeserializer.handleUnknownProperty(StdDeserializer.java:2224)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownProperty(BeanDeserializerBase.java:1709)
	at com.fasterxml.jackson.databind.deser.BeanDeserializerBase.handleUnknownVanilla(BeanDeserializerBase.java:1687)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.vanillaDeserialize(BeanDeserializer.java:320)
	at com.fasterxml.jackson.databind.deser.BeanDeserializer.deserialize(BeanDeserializer.java:177)
	at com.fasterxml.jackson.databind.deser.DefaultDeserializationContext.readRootValue(DefaultDeserializationContext.java:323)
	at com.fasterxml.jackson.databind.ObjectMapper._readMapAndClose(ObjectMapper.java:4825)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3772)
	at com.fasterxml.jackson.databind.ObjectMapper.readValue(ObjectMapper.java:3740)
	at com.example.orchestrator.util.JsonUtil.parseJson(JsonUtil.java:22)
	... 24 common frames omitted
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Request joining group due to: cached metadata has changed from (version30: {daily-data-request=[NO_RACKS], daily-data-topic=[NO_RACKS]}) at the beginning of the rebalance to (version31: {daily-data-topic=[NO_RACKS]})
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Revoke previously assigned partitions daily-data-topic-0
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions revoked: [daily-data-topic-0]
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] (Re-)joining group
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully joined group with generation Generation{generationId=91, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Finished assignment for group at generation 91: {consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910=Assignment(partitions=[daily-data-topic-0])}
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Successfully synced group in generation Generation{generationId=91, memberId='consumer-daily-data-group-1-ac3f81aa-0b8b-4ea5-8678-4df03a2c3910', protocol='range'}
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerCoordinator - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Notifying assignor about the new Assignment(partitions=[daily-data-topic-0])
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.i.ConsumerRebalanceListenerInvoker - [Consumer clientId=consumer-daily-data-group-1, groupId=daily-data-group] Adding newly assigned partitions: daily-data-topic-0
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.a.k.c.c.internals.ConsumerUtils - Setting offset for partition daily-data-topic-0 to the committed offset FetchPosition{offset=51278, offsetEpoch=Optional.empty, currentLeader=LeaderAndEpoch{leader=Optional[192.168.0.212:9093 (id: 1001 rack: null)], epoch=0}}
2024-07-31 11:56:29 [org.springframework.kafka.KafkaListenerEndpointContainer#2-0-C-1] INFO  o.s.k.l.KafkaMessageListenerContainer - daily-data-group: partitions assigned: [daily-data-topic-0]
2024-07-31 12:00:54 [MessageBroker-32] INFO  o.s.w.s.c.WebSocketMessageBrokerStats - WebSocketSession[0 current WS(0)-HttpStream(0)-HttpPoll(0), 4 total, 0 closed abnormally (0 connect failure, 0 send limit, 0 transport error)], stompSubProtocol[processed CONNECT(4)-CONNECTED(4)-DISCONNECT(0)], stompBrokerRelay[null], inboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 66], outboundChannel[pool size = 0, active threads = 0, queued tasks = 0, completed tasks = 10], sockJsScheduler[pool size = 32, active threads = 1, queued tasks = 1, completed tasks = 1149]
